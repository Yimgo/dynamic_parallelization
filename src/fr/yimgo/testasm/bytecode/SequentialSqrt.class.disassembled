// javap -c -p -s -l -verbose build/fr/yimgo/testasm/SequentialSqrt.class
Classfile /home/guillaume/devel/Yimgo/test_asm/build/fr/yimgo/testasm/SequentialSqrt.class
  Last modified Jun 13, 2014; size 580 bytes
  MD5 checksum 81c67639b489d7271acb592454248b67
public class fr.yimgo.testasm.SequentialSqrt
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #9.#18         //  java/lang/Object."<init>":()V
   #2 = Class              #19            //  java/lang/Double
   #3 = Methodref          #2.#20         //  java/lang/Double."<init>":(D)V
   #4 = Methodref          #21.#22        //  java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
   #5 = Methodref          #21.#23        //  java/lang/Integer.intValue:()I
   #6 = Fieldref           #24.#25        //  java/lang/System.out:Ljava/io/PrintStream;
   #7 = Methodref          #26.#27        //  java/io/PrintStream.println:(Ljava/lang/Object;)V
   #8 = Class              #28            //  fr/yimgo/testasm/SequentialSqrt
   #9 = Class              #29            //  java/lang/Object
  #10 = Utf8               <init>
  #11 = Utf8               ()V
  #12 = Utf8               Code
  #13 = Utf8               sqrt
  #14 = Utf8               (Ljava/lang/Integer;)Ljava/lang/Double;
  #15 = Utf8               StackMapTable
  #16 = Class              #19            //  java/lang/Double
  #17 = Class              #30            //  java/lang/Integer
  #18 = NameAndType        #10:#11        //  "<init>":()V
  #19 = Utf8               java/lang/Double
  #20 = NameAndType        #10:#31        //  "<init>":(D)V
  #21 = Class              #30            //  java/lang/Integer
  #22 = NameAndType        #32:#33        //  valueOf:(I)Ljava/lang/Integer;
  #23 = NameAndType        #34:#35        //  intValue:()I
  #24 = Class              #36            //  java/lang/System
  #25 = NameAndType        #37:#38        //  out:Ljava/io/PrintStream;
  #26 = Class              #39            //  java/io/PrintStream
  #27 = NameAndType        #40:#41        //  println:(Ljava/lang/Object;)V
  #28 = Utf8               fr/yimgo/testasm/SequentialSqrt
  #29 = Utf8               java/lang/Object
  #30 = Utf8               java/lang/Integer
  #31 = Utf8               (D)V
  #32 = Utf8               valueOf
  #33 = Utf8               (I)Ljava/lang/Integer;
  #34 = Utf8               intValue
  #35 = Utf8               ()I
  #36 = Utf8               java/lang/System
  #37 = Utf8               out
  #38 = Utf8               Ljava/io/PrintStream;
  #39 = Utf8               java/io/PrintStream
  #40 = Utf8               println
  #41 = Utf8               (Ljava/lang/Object;)V
{
  public fr.yimgo.testasm.SequentialSqrt();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0       
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return        

  public java.lang.Double sqrt(java.lang.Integer);
    descriptor: (Ljava/lang/Integer;)Ljava/lang/Double;
    flags: ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: new           #2                  // class java/lang/Double
         3: dup           
         4: dconst_0      
         5: invokespecial #3                  // Method java/lang/Double."<init>":(D)V
         8: astore_2      
         9: iconst_0      
        10: invokestatic  #4                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        13: astore_3      
        14: aload_3       
        15: invokevirtual #5                  // Method java/lang/Integer.intValue:()I
        18: aload_1       
        19: invokevirtual #5                  // Method java/lang/Integer.intValue:()I
        22: if_icmpge     50
        25: getstatic     #6                  // Field java/lang/System.out:Ljava/io/PrintStream;
        28: aload_3       
        29: invokevirtual #7                  // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
        32: aload_3       
        33: invokevirtual #5                  // Method java/lang/Integer.intValue:()I
        36: pop           
        37: aload_3       
        38: invokevirtual #5                  // Method java/lang/Integer.intValue:()I
        41: iconst_1      
        42: iadd          
        43: invokestatic  #4                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        46: astore_3      
        47: goto          14
        50: aload_2       
        51: areturn       
      StackMapTable: number_of_entries = 2
           frame_type = 253 /* append */
          offset_delta = 14
          locals = [ class java/lang/Double, class java/lang/Integer ]
             frame_type = 250 /* chop */
            offset_delta = 35

  }
