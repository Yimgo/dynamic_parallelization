// javap -c -p -s -l -verbose build/fr/yimgo/testasm/SequentialSqrt.class
Classfile /home/guillaume/devel/Yimgo/test_asm/build/fr/yimgo/testasm/SequentialSqrt.class
  Last modified May 14, 2014; size 434 bytes
  MD5 checksum 47857d1b063f9f68b67afe0f74ada05e
public class fr.yimgo.testasm.SequentialSqrt
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #8.#16         //  java/lang/Object."<init>":()V
   #2 = Class              #17            //  java/lang/Double
   #3 = Methodref          #2.#18         //  java/lang/Double."<init>":(D)V
   #4 = Methodref          #2.#19         //  java/lang/Double.doubleValue:()D
   #5 = Methodref          #20.#21        //  java/lang/Math.sqrt:(D)D
   #6 = Methodref          #2.#22         //  java/lang/Double.valueOf:(D)Ljava/lang/Double;
   #7 = Class              #23            //  fr/yimgo/testasm/SequentialSqrt
   #8 = Class              #24            //  java/lang/Object
   #9 = Utf8               <init>
  #10 = Utf8               ()V
  #11 = Utf8               Code
  #12 = Utf8               sqrt
  #13 = Utf8               (I)Ljava/lang/Double;
  #14 = Utf8               StackMapTable
  #15 = Class              #17            //  java/lang/Double
  #16 = NameAndType        #9:#10         //  "<init>":()V
  #17 = Utf8               java/lang/Double
  #18 = NameAndType        #9:#25         //  "<init>":(D)V
  #19 = NameAndType        #26:#27        //  doubleValue:()D
  #20 = Class              #28            //  java/lang/Math
  #21 = NameAndType        #12:#29        //  sqrt:(D)D
  #22 = NameAndType        #30:#31        //  valueOf:(D)Ljava/lang/Double;
  #23 = Utf8               fr/yimgo/testasm/SequentialSqrt
  #24 = Utf8               java/lang/Object
  #25 = Utf8               (D)V
  #26 = Utf8               doubleValue
  #27 = Utf8               ()D
  #28 = Utf8               java/lang/Math
  #29 = Utf8               (D)D
  #30 = Utf8               valueOf
  #31 = Utf8               (D)Ljava/lang/Double;
{
  public fr.yimgo.testasm.SequentialSqrt();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0       
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return        

  public java.lang.Double sqrt(int);
    descriptor: (I)Ljava/lang/Double;
    flags: ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: new           #2                  // class java/lang/Double
         3: dup           
         4: dconst_0      
         5: invokespecial #3                  // Method java/lang/Double."<init>":(D)V
         8: astore_2      
         9: iconst_0      
        10: istore_3      
        11: iload_3       
        12: iload_1       
        13: if_icmpge     42
        16: aload_2       
        17: invokevirtual #4                  // Method java/lang/Double.doubleValue:()D
        20: iload_3       
        21: i2d           
        22: invokestatic  #5                  // Method java/lang/Math.sqrt:(D)D
        25: invokestatic  #6                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
        28: invokevirtual #4                  // Method java/lang/Double.doubleValue:()D
        31: dadd          
        32: invokestatic  #6                  // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
        35: astore_2      
        36: iinc          3, 1
        39: goto          11
        42: aload_2       
        43: areturn       
      StackMapTable: number_of_entries = 2
           frame_type = 253 /* append */
          offset_delta = 11
          locals = [ class java/lang/Double, int ]
             frame_type = 250 /* chop */
            offset_delta = 30

  }
